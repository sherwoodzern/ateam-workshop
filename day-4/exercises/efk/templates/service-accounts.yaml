apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: "{{ .Values.efk.namespace }}"
  labels:
    # k8s-app: {{ .Release.Name }}-fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    app: fluentd
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
  labels:
    # k8s-app: {{ .Release.Name }}-fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    app: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - "namespaces"
  - "pods"
  verbs:
  - "get"
  - "watch"
  - "list"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
  labels:
    # k8s-app: {{ .Release.Name }}-fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    app: fluentd
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: "{{ .Values.efk.namespace }}"
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
---
# RBAC authn and authz
apiVersion: v1
kind: ServiceAccount
metadata:
  name: es-cluster
  namespace: "{{ .Values.efk.namespace }}"
  labels:
    #k8s-app: es-cluster
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    add: es-cluster
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: es-cluster
  labels:
    #k8s-app: es-cluster
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    app: es-cluster
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: "{{ .Values.efk.namespace }}"
  name: es-cluster
  labels:
    #k8s-app: es-cluster
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    app: es-cluster
subjects:
- kind: ServiceAccount
  name: es-cluster
  namespace: "{{ .Values.efk.namespace }}"
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: es-cluster
  apiGroup: ""
